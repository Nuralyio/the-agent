name: Release

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

jobs:
  test-and-build:
    name: Test & Build Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Install browsers
        run: npm run install:browsers

      - name: Run full test suite
        run: npm run test
        env:
          CI: true
          BROWSER_HEADLESS: true

      - name: Build package
        run: npm run build

      - name: Run post-build verification
        run: |
          echo "Checking build output..."
          ls -la packages/core/dist/
          ls -la packages/api-server/dist/
          ls -la packages/web-ui/build/
          echo "Build verification completed successfully"

      - name: Create build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.ref_name }}
          path: |
            dist/
            package.json
            README.md
          retention-days: 30

      - name: Publish to npm (optional)
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "npm publish --dry-run" # Remove --dry-run when ready
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  compatibility-test:
    name: Compatibility Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Install Playwright
        run: npx playwright install chromium

      - name: Run basic smoke test
        run: npm test -- --headless --browser chrome --adapter playwright "Navigation Tests"
        env:
          CI: true
          BROWSER_HEADLESS: true
